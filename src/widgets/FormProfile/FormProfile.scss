'use client';
import React, {useRef, useState} from 'react';
import {CSSTransition, SwitchTransition} from "react-transition-group";
import {FirstStep} from "./components/firstStep";
import {SecondStep} from "./components/secondStep";
import {ThirdStep} from "./components/thirdStep";
import {Button, SectionWhite} from "@components";
import {classes} from "./FormProfile.cn";
import './styles/FormProfile.scss';


type FormDataType = Record<'sum_coins' | 'settings' | 'count' | 'mode', string>;
type PartialFormDataType = Pick<FormDataType, 'sum_coins' | 'settings'> & Partial<Pick<FormDataType, 'count' | 'mode'>>

export const FormProfile = () => {
	const [step, setStep] = useState(1);
	const [formData, setFormData] = useState<PartialFormDataType>({
		sum_coins: '',
		settings: ''
	});
	const nodeRef = useRef<HTMLFormElement>(null);

	const styles = classes();

	const nextStep = (data: { name: string, value: string }) => {
		setFormData((prev) => ({...prev, [data.name]: data.value}));

		if (step === 2 && formData.settings !== 'hand') {
			submitForm();
		} else {
			setStep(prev => prev + 1);
		}
	};

	const submitForm = () => {
		console.log(formData)
	}

	return (
		<div className="form-profile">
			<SwitchTransition mode="out-in">
				<CSSTransition
					key={step}
					timeout={500}
					classNames="transition"
					nodeRef={nodeRef}
				>
					<form className="form-step" ref={nodeRef} onSubmit={submitForm}>
						{step === 1 && <FirstStep nextStepHandler={nextStep}/>}
						{step === 2 && <SecondStep nextStepHandler={nextStep}/>}
						{step === 3 && formData.settings === 'hand' && <ThirdStep nextStepHandler={nextStep}/>}
						<SectionWhite overflow="overflow-auto" className="flex gap-2">
							<Button type="button" className={styles.elementButton}>Назад</Button>
							<Button type="button" className={styles.elementButton}>Далее</Button>
							<Button type="button" className={styles.elementButton}>Сохранить</Button>
						</SectionWhite>
					</form>
				</CSSTransition>
			</SwitchTransition>
		</div>
	);
};