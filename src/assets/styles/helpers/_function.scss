@use 'sass:math';

@function rem($pixel) {
	@if math.is-unitless($pixel) {
		@return math.div($pixel, 16) + rem;
	} @else {
		@error 'Не используйте единицы измерения при работе с функцией rem()! Передавайте аргументом только числа.'
	}
}

@function fluid($max: 100, $min: 10, $minViewportWidth: 375) {
	$maxViewportWidth: 1920;

	$maxSize: math.div($max, 16);
	$minSize: math.div($min, 16);
	$maxWidth: math.div($maxViewportWidth, 16);
	$minWidth: math.div($minViewportWidth, 16);

	$slope: math.div(($maxSize - $minSize), ($maxWidth - $minWidth));
	$yAxisIntersection: -$minWidth * $slope + $minSize;

	@return clamp(
					#{$minSize * 1rem},
					#{$yAxisIntersection * 1rem} + #{$slope * 100vw},
					#{$maxSize * 1rem}
	);
}

@function adaptive-size(
	$min-value,
    $max-value,
    $min-breakpoint: 375px,
    $max-breakpoint: 1920px,
    $clamp: false
) {
	$slope: calc(($max-value - $min-value) / ($max-breakpoint - $min-breakpoint));
	$slope-vw: $slope * 100vw;
	$intercept: $min-value - $slope * $min-breakpoint;
	$value: calc(#{$intercept} + #{$slope-vw});

	@if $clamp {
		@return clamp(#{$min-value}, #{$value}, #{$max-value});
	} @else {
		@return $value;
	}
}
